version: '3.8'
services:
  shell:
    image: "busybox:latest"

  rabbitmq:
    image: "rabbitmq:3.10"
    restart: unless-stopped
    hostname: rmq
    expose:
      - 15692
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq.advanced.config:/etc/rabbitmq/advanced.config
      - ./rabbitmq-definitions.json:/etc/rabbitmq/definitions.json
      - rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@rmq
      - rabbitmq_logs:/var/log/rabbitmq/log
    ports:
      - "${LOCAL_IP}:5672:5672"

  daemon01:
    hostname: 'docker_compose_monitor_01'
    build:
      context: ..
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ipfs_01_path:/data/ipfs
      - ./001_configure_ipfs.sh:/container-init.d/001_configure_ipfs.sh
      - ./002_configure_first_daemon_announce.sh:/container-init.d/002_configure_first_daemon_announce.sh
    ports:
      - "4001:4001/tcp"
      - "4001:4001/udp"
      - "${LOCAL_IP}:5001:5001"
      - "${LOCAL_IP}:8432:8432"

  daemon02:
    hostname: 'docker_compose_monitor_02'
    build:
      context: ..
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ipfs_02_path:/data/ipfs
      - ./001_configure_ipfs.sh:/container-init.d/001_configure_ipfs.sh
      - ./002_configure_second_daemon_addresses.sh:/container-init.d/002_configure_second_daemon_addresses.sh
    ports:
      - "4002:4002/tcp"
      - "4002:4002/udp"
      - "${LOCAL_IP}:5002:5001"
      - "${LOCAL_IP}:8433:8432"

  geoipupdate:
    image: maxmindinc/geoipupdate
    restart: unless-stopped
    environment:
      - GEOIPUPDATE_ACCOUNT_ID=$GEOIP_ACCOUNT_ID
      - GEOIPUPDATE_LICENSE_KEY=$GEOIP_LICENSE_KEY
      - 'GEOIPUPDATE_EDITION_IDS=GeoLite2-ASN GeoLite2-City GeoLite2-Country'
      - GEOIPUPDATE_FREQUENCY=24
    volumes:
      - geoip_data:/usr/share/GeoIP

  monitoring-client:
    image: "bitswap-monitoring-client:latest"
    restart: unless-stopped
    expose:
      - 8088
    volumes:
      - ./monitoring_client_config.yaml:/ipfs-tools/config/bitswap-monitoring-client-config.yaml
      - geoip_data:/geoip
      - ${ENABLE_LOGGING:+${LOG_PATH-}}:/ipfs-tools/traces
    environment:
      - RUST_LOG=info
      - ENABLE_LOGGING
      - LOG_PATH
    depends_on:
      geoipupdate:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      daemon01:
        condition: service_healthy
      daemon02:
        condition: service_healthy

volumes:
  ipfs_01_path:
  ipfs_02_path:
  rabbitmq_data:
  rabbitmq_logs:
  geoip_data:
